From 48578ee2d752e8761746f7c4c59b86a12f8d2970 Mon Sep 17 00:00:00 2001
From: md_5 <git@md-5.net>
Date: Sun, 21 Sep 2014 10:06:01 +1000
Subject: [PATCH] Fix Some Memory Leaks


diff --git a/src/main/java/net/minecraft/server/EnchantmentManager.java b/src/main/java/net/minecraft/server/EnchantmentManager.java
index ace8fb3..9e109a1 100644
--- a/src/main/java/net/minecraft/server/EnchantmentManager.java
+++ b/src/main/java/net/minecraft/server/EnchantmentManager.java
@@ -158,6 +158,10 @@ public class EnchantmentManager {
         if (entity instanceof EntityHuman) {
             a((EnchantmentModifier) d, entityliving.be());
         }
+        // Spigot start
+        d.b = null;
+        d.a = null;
+        // Spigot end
     }
 
     public static void b(EntityLiving entityliving, Entity entity) {
@@ -167,6 +171,10 @@ public class EnchantmentManager {
         if (entityliving instanceof EntityHuman) {
             a((EnchantmentModifier) e, entityliving.be());
         }
+        // Spigot start
+        e.a = null;
+        e.b = null;
+        // Spigot end
     }
 
     public static int getKnockbackEnchantmentLevel(EntityLiving entityliving, EntityLiving entityliving1) {
diff --git a/src/main/java/net/minecraft/server/EntityInsentient.java b/src/main/java/net/minecraft/server/EntityInsentient.java
index 617f7d4..5e255ea 100644
--- a/src/main/java/net/minecraft/server/EntityInsentient.java
+++ b/src/main/java/net/minecraft/server/EntityInsentient.java
@@ -1,5 +1,6 @@
 package net.minecraft.server;
 
+import java.lang.ref.WeakReference; // Spigot
 import java.util.Iterator;
 import java.util.List;
 import java.util.UUID;
@@ -21,7 +22,7 @@ public abstract class EntityInsentient extends EntityLiving {
     private Navigation navigation;
     protected final PathfinderGoalSelector goalSelector;
     protected final PathfinderGoalSelector targetSelector;
-    private EntityLiving goalTarget;
+    private WeakReference<EntityLiving> goalTarget = new WeakReference<EntityLiving>(null);
     private EntitySenses bq;
     private ItemStack[] equipment = new ItemStack[5];
     public float[] dropChances = new float[5]; // CraftBukkit - protected -> public
@@ -76,11 +77,11 @@ public abstract class EntityInsentient extends EntityLiving {
     }
 
     public EntityLiving getGoalTarget() {
-        return this.goalTarget;
+        return this.goalTarget.get(); // Spigot
     }
 
     public void setGoalTarget(EntityLiving entityliving) {
-        this.goalTarget = entityliving;
+        this.goalTarget = new WeakReference<EntityLiving>(entityliving); // Spigot
     }
 
     public boolean a(Class oclass) {
diff --git a/src/main/java/net/minecraft/server/NetworkManager.java b/src/main/java/net/minecraft/server/NetworkManager.java
index 0cae021..d3a4390 100644
--- a/src/main/java/net/minecraft/server/NetworkManager.java
+++ b/src/main/java/net/minecraft/server/NetworkManager.java
@@ -199,6 +199,8 @@ public class NetworkManager extends SimpleChannelInboundHandler {
     public void close(IChatBaseComponent ichatbasecomponent) {
         // Spigot Start
         this.preparing = false;
+        this.k.clear();
+        this.l.clear();
         // Spigot End
         if (this.m.isOpen()) {
             this.m.close();
diff --git a/src/main/java/net/minecraft/server/PathfinderGoalNearestAttackableTarget.java b/src/main/java/net/minecraft/server/PathfinderGoalNearestAttackableTarget.java
index a9e106c..239ba1c 100644
--- a/src/main/java/net/minecraft/server/PathfinderGoalNearestAttackableTarget.java
+++ b/src/main/java/net/minecraft/server/PathfinderGoalNearestAttackableTarget.java
@@ -1,5 +1,6 @@
 package net.minecraft.server;
 
+import java.lang.ref.WeakReference; // Spigot
 import java.util.Collections;
 import java.util.List;
 
@@ -9,7 +10,7 @@ public class PathfinderGoalNearestAttackableTarget extends PathfinderGoalTarget
     private final int b;
     private final DistanceComparator e;
     private final IEntitySelector f;
-    private EntityLiving g;
+    private WeakReference<EntityLiving> g = new WeakReference<EntityLiving>(null); // Spigot
 
     public PathfinderGoalNearestAttackableTarget(EntityCreature entitycreature, Class oclass, int i, boolean flag) {
         this(entitycreature, oclass, i, flag, false);
@@ -39,14 +40,14 @@ public class PathfinderGoalNearestAttackableTarget extends PathfinderGoalTarget
             if (list.isEmpty()) {
                 return false;
             } else {
-                this.g = (EntityLiving) list.get(0);
+                this.g = new WeakReference<EntityLiving>((EntityLiving) list.get(0)); // Spigot
                 return true;
             }
         }
     }
 
     public void c() {
-        this.c.setGoalTarget(this.g);
+        this.c.setGoalTarget(this.g.get()); // Spigot
         super.c();
     }
 }
diff --git a/src/main/java/net/minecraft/server/PathfinderGoalSwell.java b/src/main/java/net/minecraft/server/PathfinderGoalSwell.java
index 5d50a86..0a54096 100644
--- a/src/main/java/net/minecraft/server/PathfinderGoalSwell.java
+++ b/src/main/java/net/minecraft/server/PathfinderGoalSwell.java
@@ -3,7 +3,7 @@ package net.minecraft.server;
 public class PathfinderGoalSwell extends PathfinderGoal {
 
     EntityCreeper a;
-    EntityLiving b;
+    // EntityLiving b; // Spigot
 
     public PathfinderGoalSwell(EntityCreeper entitycreeper) {
         this.a = entitycreeper;
@@ -18,22 +18,25 @@ public class PathfinderGoalSwell extends PathfinderGoal {
 
     public void c() {
         this.a.getNavigation().h();
-        this.b = this.a.getGoalTarget();
+        // this.b = this.a.getGoalTarget(); // Spigot
     }
 
     public void d() {
-        this.b = null;
+        // this.b = null; // Spigot
     }
 
     public void e() {
-        if (this.b == null) {
+        // Spigot start
+        EntityLiving b = this.a.getGoalTarget();
+        if (b == null) {
             this.a.a(-1);
-        } else if (this.a.f(this.b) > 49.0D) {
+        } else if (this.a.f(b) > 49.0D) {
             this.a.a(-1);
-        } else if (!this.a.getEntitySenses().canSee(this.b)) {
+        } else if (!this.a.getEntitySenses().canSee(b)) {
             this.a.a(-1);
         } else {
             this.a.a(1);
         }
+        // Spigot end
     }
 }
-- 
1.9.1

